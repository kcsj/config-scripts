sort {
     street cardinality = 6.
     avenue cardinality = 8.

     monument enum: hauptsatz_monument, cantors_paradise, hilberts_hotel, domain, co_domain, homomorphic_image.
}

function {
     corner: avenue, street -> bool {surjective}.

     % position: avenue, street -> monument {}.
     % street_location: monument -> street {hidden}.
     % avenue_location: monument -> avenue {hidden}.

     % skolems to represent boundaries ...
     first_street: street. {hidden} % first street ...
     sixth_street: street. {hidden} % sixth street ...
     first_avenue: avenue. {hidden} % first avenue ...
     eighth_avenue: avenue. {hidden} % eighth avenue ...
}

clause {
     % set up some (strict) ordering ...
     first_street = MIN AND sixth_street = MAX.
     first_avenue = MIN AND eighth_avenue = MAX.

     % set up some boundaries ...
     corner(first_avenue, first_street). % ... west-north corner
     corner(first_avenue, sixth_street). % ... west-south corner
     corner(eighth_avenue, first_street). % ... east-north corner
     corner(eighth_avenue, sixth_street). % ... east-south corner
     corner(x, y) = ((x = first_avenue OR x = eighth_avenue) AND (y = first_street OR y = sixth_street)). % ... and no other corners

     % set up some locations (and positions)...
     % ... the hauptsatz monument is due south-east from cantor's paradise
     % position(street_location(cantors_paradise)-x, avenue_location(cantors_paradise)-y) = hauptsatz_monument.

     % ... the hauptsatz monument is two blocks north of hilbert's hotel
     % position(street_location(hilberts_hotel), avenue_location(hilberts_hotel)+2) = hauptsatz_monument.

     % ... the Hauptsatz monument is three blocks north and two blocks east of domain
     % position(street_location(domain)+3, avenue_location(domain)-2) = hauptsatz_monument.

     % ... north of the domain is due east of cantor's paradise

     % ... the domain and the co-domain are at diagonally opposite corners of a block
     % position(street_location(domain)+1, avenue_location(domain)+1) = co_domain OR position(street_location(domain)-1, avenue_location(domain)-1) = co_domain.
     
     % ... the co-domain is due north-east of hilbert's hotel

     % ... the co-domain is due south of the homomorphic image
}

end

% =================
% logic4fun version
% =================
% #user#
% chu

% #sorts#
% street cardinality = 6.
% avenue cardinality = 8.

% monument enum: hauptsatz_monument, cantors_paradise, hilberts_hotel, domain, co_domain, homomorphic_image.


% #functions#
% position: avenue, street -> monument {injective partial}.

% street_location: monument -> street {hidden}.
% avenue_location: monument -> avenue {hidden}.

% first_street: street. {hidden}
% sixth_street: street. {hidden}
% first_avenue: avenue. {hidden}
% eighth_avenue: avenue. {hidden}


% #clauses#
% % set up some (strict) ordering ...
% first_street = MIN AND sixth_street = MAX.
% first_avenue = MIN AND eighth_avenue = MAX.

% % set up relationship between position and locations ...
% (position(x, y) = z) = (avenue_location(z) = x AND street_location(z) = y).

% % set up some positions ...
% % ... north of domain is due east of cantor's paradise
% avenue_location(domain) > avenue_location(cantors_paradise) AND street_location(domain) > street_location(cantors_paradise).

% % ... the hauptsatz monument is two blocks north of hilbert's hotel
% position(avenue_location(hilberts_hotel)-2, street_location(hilberts_hotel)) = hauptsatz_monument.

% % ... the domain is three blocks south and two blocks west of the hauptsatz monument
% position(avenue_location(hauptsatz_monument)-3, street_location(hauptsatz_monument)+2) = domain.

% % ... the hauptsatz monument is due south-east from cantor's paradise
% DIF(avenue_location(cantors_paradise), avenue_location(hauptsatz_monument)) = DIF(street_location(cantors_paradise), street_location(hauptsatz_monument)) + DIF(street_location(cantors_paradise), street_location(hauptsatz_monument)).

% % ... the co-domain is due north-east of hilbert's hotel
% DIF(avenue_location(co_domain), avenue_location(hilberts_hotel)) = DIF(street_location(co_domain), street_location(hilberts_hotel)) + DIF(street_location(co_domain), street_location(hilberts_hotel)).

% % ... the domain and the co-domain are at diagonally opposite corners of a block
% (DIF(avenue_location(domain), avenue_location(co_domain)) = 1) AND (DIF(street_location(domain), street_location(co_domain)) = 1).

% % ... the co-domain is south of the homomorphic image
% street_location(co_domain) = street_location(homomorphic_image) AND avenue_location(co_domain) > avenue_location(homomorphic_image).

% % [TESTING] set up some locations ...
% %position(first_avenue+1, first_street) = cantors_paradise.
% %position(first_avenue+5, first_street+1) = hauptsatz_monument.
% %position(first_avenue+7, first_street+1) = hilberts_hotel.
% %position(first_avenue+2, first_street+4) = domain.
% %position(first_avenue+1, first_street+5) = co_domain.
% %position(first_avenue, first_street+5) = homomorphic_image.

 

% #mode#
% SAVE


% #problem#
% Downtown    


% #settings#
% solutions: 3
% time_limit: 3
% pre_test: 3
% verbosity {
%  job:none
%   models:full
%   stats:none
% }
% cv_limit:100000
% stack:LARGE



% #end#
