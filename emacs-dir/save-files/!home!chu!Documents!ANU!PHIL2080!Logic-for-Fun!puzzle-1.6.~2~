Sorts:
------
child enum: alice, boris, claire, david.
stage enum: before, after, during.

Functions:
----------
% returns the bean count of a specified child at a specified stage
beans: child, stage -> int {}.
% one child gives beans to another child at a specified stage
gives: child, child, stage -> int {}.

Clauses:
--------
% [function: gives]
% if child x gives child y, q beans at stage z then:
% x’s beans at stage z + 1 are equal to x’s beans at stage z minus q beans (and)
% y’s beans at stage z + 1 are equal to y’s beans at stage z plus q beans
gives(x, y, z) = q -> (beans(x, z + 1) = beans(x, z) - q) AND (beans(y, z + 1) = beans(y, z) + q).

% [stage: all]
% all of the numbers of beans given is different and each is less than 7
% gives(x, y, during) = gives(x, z, during) -> y = z.
gives(x, y, z) = gives(x, w, z) -> y = w.
gives(x, y, z) > 0 AND gives(x, y, z) < 7.

% [stage: before]
% each child has a different number of beans (greater than 1 and less than 10)
beans(x, before) = beans(y, before) -> x = y.
beans(x, before) > 1 AND beans(x, before) < 10.

% [stage: during]
% david gives some of his beans to alice at the during stage
gives(david, alice, during) > 0 AND beans(david, during) > 0.

% claire gives some of her beans to boris at the during stage
gives(claire, boris, during) > 0 AND beans(claire, during) > 0.

% [stage: after]
% (again) each child has a different number of beans (greater than 1 and less than 10)
beans(x, after) = beans(y, after) -> x = y.
beans(x, after) > 1 AND beans(x, after) < 10.

% boris gives some of his beans to alice at the after stage
gives(boris, alice, after) > 0 AND beans(boris, after) > 0.

% david gives some of his beans to claire at the after stage
gives(david, claire, after) > 0 AND beans(david, after) > 0.

% no child has the same number of beans after as any child (themselves included) did before
NOT (beans(x, before) = beans(x, after)) AND NOT (beans(x, before) = beans(y, after)).

% alice has one more bean than david and claire has one less bean than boris
beans(alice, after) = (beans(david, after) + 1) AND beans(claire, after) = (beans(boris, after) - 1).

% alice gets more beans from david than she does from boris
gives(david, alice, during) > gives(boris, alice, after).
