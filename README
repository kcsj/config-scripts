=This README file is best read using functionality provided by org-mode=

* The =Configuration Script= project
- This directory houses the configuration files most important for the perfect[fn:subjective] working system.

- An [[file:config-setup.sh][install]] scripts is provided which includes functionality to save and restore the configuration project.

- The =configuration script= project is designed for use with the following applications:
  + BASH Terminal
    - Version: 0.00
  + StumpWM Window Manager
    - Version: 0.00
  + GNU Emacs Editor
    - Version: 24.0.92.1
    - Org Extension
      - Version: 7.8.03
    - ERC Extension
      - Version: 5.3
    - Gnus Extension
      - Version: 5.13
  + Conkeror Web Browser
    - Version: 0.00
  + Music Player Daemon
    - Version: 0.00
  + NCMPCPP Client
    - Version: 0.00
  + VLC Player
    - Version: 0.00
  + NMCLI Network Manager
    - Version: 0.00

- The configuration will hopefully represent a possible "desktop" shell setup for GNU/Linux which is cross-platform across distributions. Because the system is designed to work across different distributions, there must be two development repositories - one for /stable/ development builds, and one for /unstable/ development builds. The setup currently supports:
  + debian :: /stable/ repositories (/unstable/ may work)
  + ubuntu :: /stable/ repositories (/unstable/ may work)
  + arch :: /stable/ and /unstable/ repositories

** TODO Rename configuration files
- All config files are placed in their respective directories, and titled with their function and file extensions.
  - ~/.conf-scripts/emacs-dir/ -> ~/.emacs.d/
  - ~/.conf-scripts/stumpwm-dir/init.lisp -> ~/.stumpwmrc
  - ~/.conf-scripts/bash-dir/init.sh -> ~/.bashrc

** Linking Files
- This configuration should be stored in a single directory; the configuration can be put on github (or another service) and pulled/pushed as required.

- The files and directories of the =configuration scripts= project can then be =symlink='d from their source to a destination location.

- WARNING: The linking process needs to be run from the =configuration scripts= project root directory.

*** List of link files:
|-----------------------+----------------+------------------------------------------|
| Source:               | Destination:   | Command:                                 |
|-----------------------+----------------+------------------------------------------|
| aptitude-dir/         | ~/.aptitude/   | ln -s aptitude-dir/ ~/.aptitude          |
| bash-dir/             | ~/.bash.d/     | ln -s bash-dir/ ~/.bash.d                |
| conkeror-dir/         | ~/.conkerorrc/ | ln -s conkeror-dir/ ~/.conkerorrc        |
| emacs-dir/            | ~/.emacs.d/    | ln -s emacs-dir/ ~/.emacs.d              |
| ncmpcpp-dir/          | ~/.ncmpcpp/    | ln -s ncmpcpp-dir/ ~/.ncmpcpp            |
| stumpwm-dir/          | ~/.stumpwm.d/  | ln -s stumpwm-dir/ ~/.stumpwm.d          |
|-----------------------+----------------+------------------------------------------|
| bash-dir/init.sh      | ~/.bashrc      | ln -s bash-dir/init.sh ~/.bashrc         |
| mpd-dir/mpd.conf      | ~/.mpdconf     | ln -s mpd-dir/mpd.conf ~/.mpdconf        |
| stumpwm-dir/init.lisp | ~/.stumpwmrc   | ln -s stumpwm-dir/init.lisp ~/.stumpwmrc |
|-----------------------+----------------+------------------------------------------|

- aptitude-dir
  + README
- bash-dir
  + README
  + init.sh
  + profile.sh
  + aliases.sh
  + functions.sh
- conkeror-dir
  + README
  + init.js
- emacs-dir
  + README
  + init.el
- mpd-dir
  + README
  + init.conf
- ncmpcpp-dir
  + README
- stumpwm-dir
  + README
  + init.lisp
- xinit-dir
  + README
  + init.sh

*** List of non-link files:
|-------------------|
| File Name:        |
|-------------------|
| [[file:.gitignore][.gitignore]]        |
| [[file:~/.conf-scripts][README]]            |
| [[file:config-setup.sh][config-setup.sh]]   |
| [[file:restore-script.sh][restore-script.sh]] |
| [[file:backup-script.sh][backup-script.sh]]  |
|-------------------|

*** TODO create script for symlinking files and directories
- the symlink command is: =ln -s <src> <dst>=
- example: =cd; ln -s .conf-scripts/bashrc .bashrc=
- =config-setup.sh= started

** Initial Configuration
# TODO: link to files
- The [[file:config-setup.sh][config-setup.sh]] script ought to be agnostic to the underlying architecture - it will run on an =arch= install, or a =debian= install.

- An install will just install the selected base (i.e. =arch= or =debian=) and then run the [[file:config-setup.sh][config-setup.sh]] script.

- The [[file:config-setup.sh][config-setup.sh]] runs the following operations:
  1. =clone= the =configuration scripts= project directory from [[http://www.github.com][github]]
  2. run =quicklisp= configuration (available from [[http://www.google.com][here]])
  3. =symlink= appropriate configuration files (from =~/.conf-scripts/=)
  4. restart system

- =stumpwm= is loaded through `quicklisp' with the following command: sbcl --eval "(ql:quickload 'stumpwm)" --eval "(stumpwm:stumpwm)" - This is handled in the [[file:xinit-dir/rc.sh][xinit/init.sh]] script called when =startx= is launched.

- Have two different versions of the configuration setups:
  + `stable' :: Guaranteed to work on both =debian= and =arch= installs.
  + `unstable' :: No guarantee it will work on a =debian= install.

- The following command: =sudo update-rc.d -f gdm remove= removes gdm from the boot process.
- To start GDM manually: =sudo /etc/init.d/gdm start=
- To restore defaults: =sudo update-rc.d gdm defaults=
  
*** Configuration Script :: [[file:config-setup.sh][config-setup.sh]]
- The =configuration script= serves three main purposes:
  1. install the custom configuration
  2. backup the custom configuration
  3. restore the custom configuration

- the following variables are hard-coded in the file:
  + APTITUDE\_DIR\_SRC="~/.conf-scripts/aptitude-dir/
  + APTITUDE\_DIR\_DEST="~/.aptitude/"

  + EMACS\_DIR\_SRC="~/.conf-scripts/emacs-dir/"
  + EMACS\_DIR\_DEST="~/.emacs.d/"

  + CONKEROR\_DIR\_SRC="~/.conf-scripts/conkeror-dir/"
  + CONKEROR\_DIR\_DEST="~/.conkerorrc/"

  + STUMPWM\_DIR\_SRC="~/.conf-scripts/stumpwm-dir/"
  + STUMPWM\_DIR\_DEST="~/.stumpwm.d/"

  + STUMPWM\_RC\_SRC="~/.conf-scripts/stumpwm-dir/init.lisp"
  + STUMPWM\_RC\_DEST="~/.stumpwmrc"

  + BASH\_DIR\_SRC="~/.conf-scripts/bash-dir/"
  + BASH\_DIR\_DEST="~/.bash.d/"

  + BASH\_RC\_SRC="~/.conf-scripts/bash-dir/bashrc"
  + BASH\_RC\_DEST="~/.bashrc"

  + MPD\_RC\_SRC="~/.conf-scripts/mpd.conf"
  + MPD\_RC\_DEST="~/.mpd.conf"

**** Install Script
- the install process is written with two functions of use:
  1. the "maximal" function: this function will pull in all the required files (through 'git clone' for example)
  2. the "minimal" function: this function will symlink files from a $SRC location to a $DEST location

- the maximal process allows one to configure the whole system from this script alone, it executes:
  + download the project file from a source repository (in this case, github)
  + create directory structure

- the minimal process allows one to configure the system from this custom config setup script
  + create symlink's from $SRC to $DEST

*** Backup Script :: [[file:backup-script.sh][backup-script.sh]]
- the backup script ...

*** Restore Script :: [[file:restore-script.sh][restore-script.sh]]
- the restore script ...

** Application Configuration
*** Aptitude Configuration :: [[~/.conf-scripts/aptitude-dir/][aptitude-dir/]]
- the Aptitude configuration is explained in the [[file:aptitude-dir/README][README]] file of =aptitude-dir= directory

*** BASH Configuration :: [[file:bash-dir/][bash-dir/]]
- the BASH configuration is explained in the [[file:bash-dir/README][README]] file of the =bash-dir= directory

*** Conkeror Configuration :: [[file:conkeror-dir/][conkeror-dir/]]
- the Conkeror configuration is explained in the [[file:conkeror-dir/README][README]] file of the =conkeror-dir= directory

*** GNU Emacs Configuration :: [[file:emacs-dir/][emacs-dir/]]
- the GNU Emacs configuration is explained in the [[file:emacs-dir/README][README]] file of the =emacs-dir= directory

*** StumpWM Configuration :: [[~/.conf-scripts/stumpwm-dir/][stumpwm-dir/]]
- the StumpWM configuration is explained in the [[file:stumpwm-dir/README][README]] file of the =stumpwm-dir= directory

*** NCMPCPP Configuration :: [[file:~/.conf-scripts/ncmpcpp-dir/][ncmpcpp-dir/]]
- the NCMPCPP configuration is explained in the [[file:ncmpcpp-dir/README][README]] file of the =ncmpcpp-dir= directory

*** MPD Configuration :: [[file:~/.conf-scripts/mpd-dir/][mpd-dir/]]
- the MPD configuration is explained in the [[file:mpd-dir/README][README]] file of the =mpd-dir= directory

** TODO Create a /literate/ configuration script
- Based on the idea available from Eric Schulte at [[http://eschulte.me/emacs-starter-kit/starter-kit.html][Emacs Starter Kit]].

# TODO: create a "literate" configuration script initialisation file

# run org-babel on start ...
* Footnotes

[fn:subjective] Obviously this is subjective, these are the features I consider to be most important.

[fn:broken-link] WARNING: Broken link.




